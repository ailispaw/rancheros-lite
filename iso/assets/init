#!/bin/sh
set -e

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

mount -t devtmpfs devtmpfs /dev

mkdir -p /var/log
syslogd
sleep 1
logger -s -p user.info -t "init[$$]" "Start init"

mkdir -p /dev/pts

logger -s -p user.info -t "init[$$]" "Mounting system"
mount -t devpts devpts /dev/pts
mount -t proc none /proc
mount -t tmpfs none /run
mount -t sysfs none /sys
mount -t tmpfs none /sys/fs/cgroup

for i in blkio cpu cpuacct cpuset devices freezer memory net_cls perf_event; do
  mkdir -p /sys/fs/cgroup/$i
  mount -t cgroup -o $i none /sys/fs/cgroup/$i
done

# Basic Configuration
# from https://github.com/rancherio/os/blob/master/scripts/dockerimages/00-base
sed -i '/^root/s!/bin/sh!/bin/bash!' /etc/passwd
echo 'RancherOS Lite: \n \l' > /etc/issue
passwd -l root
addgroup -g 1100 rancher
addgroup -g 1101 docker
addgroup -g 1103 sudo
adduser -u 1100 -G rancher -D -h /home/rancher -s /bin/bash rancher
sed -i 's/\(^docker.*\)/\1rancher/g' /etc/group
sed -i 's/\(^sudo.*\)/\1rancher/g' /etc/group
echo '%sudo ALL=(ALL) ALL' >> /etc/sudoers

# from https://github.com/rancherio/os/blob/master/scripts/dockerimages/06-console
sed -i 's/rancher:!/rancher:*/g' /etc/shadow
echo '## allow password less for rancher user' >> /etc/sudoers
echo 'rancher ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

# Set /opt/bin to $PATH
mkdir -p /etc/profile.d
echo "PATH=$PATH:/opt/bin" > /etc/profile.d/optbin.sh
chmod +x /etc/profile.d/optbin.sh

# Create /var/db/ntp-kod for sntp
mkdir -p /var/db
touch /var/db/ntp-kod

VERSION=0.5.0
cat > /etc/os-release << EOF
NAME="RancherOS Lite"
VERSION=$VERSION
ID=rancheros
ID_LIKE=busybox
VERSION_ID=$VERSION
PRETTY_NAME="RancherOS Lite v$VERSION"
EOF

# from https://github.com/rancherio/os/blob/master/scripts/dockerimages/scripts/console.sh
RANCHER_HOME=/home/rancher
if [ ! -d ${RANCHER_HOME} ]; then
  mkdir -p ${RANCHER_HOME}
  chown rancher:rancher ${RANCHER_HOME}
  chmod 2755 ${RANCHER_HOME}
fi
echo "rancher:rancher" | chpasswd

# Setup consistent volumes
mkdir -p /var/lib/docker
mkdir -p /var/lib/rancheros-lite

DEVICE=$(blkid | grep -e 'LABEL="RANCHEROS-DATA"' | head -n 1 | sed 's/:.*//')
if [ -n "$DEVICE" ]; then
  PARTNAME=$(echo "$DEVICE" | sed 's/.*\///')
  logger -s -p user.info -t "init[$$]" "Mounting HDD /dev/$PARTNAME"
  mkdir -p /mnt/$PARTNAME
  if ! mount -t ext4 /dev/$PARTNAME /mnt/$PARTNAME; then
    logger -s -p user.info -t "init[$$]" "Running from memory, this won't be good..."
  else
    rm -rf /var/lib/docker
    mkdir -p /mnt/$PARTNAME/var/lib/docker
    ln -s /mnt/$PARTNAME/var/lib/docker /var/lib/docker

    rm -rf /var/lib/rancheros-lite
    mkdir -p /mnt/$PARTNAME/var/lib/rancheros-lite
    ln -s /mnt/$PARTNAME/var/lib/rancheros-lite /var/lib/rancheros-lite

    if [ ! -d /mnt/$PARTNAME/home ]; then
      mv /home /mnt/$PARTNAME/home
    else
      rm -rf /home
    fi
    ln -s /mnt/$PARTNAME/home /home

    rm -rf /opt
    mkdir -p /mnt/$PARTNAME/opt
    ln -s /mnt/$PARTNAME/opt /opt
  fi
fi
DEVICE=$(blkid | grep -e 'LABEL="RANCHEROS-SWAP"' | head -n 1 | sed 's/:.*//')
if [ -n "$DEVICE" ]; then
  logger -s -p user.info -t "init[$$]" "Enable SWAP $DEVICE"
  swapon $DEVICE
fi

if [ -x /var/lib/rancheros-lite/init.sh ]; then
  logger -s -p user.info -t "init[$$]" "Executing custom configuration"
  /var/lib/rancheros-lite/init.sh || true
fi

logger -s -p user.info -t "init[$$]" "Configuring Network"
echo "rancheros-lite" > /etc/hostname
hostname -F /etc/hostname

cat <<EOF > /etc/hosts
127.0.0.1 localhost
127.0.1.1 $(hostname)
EOF

cat <<EOF > /etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
options single-request-reopen
EOF

ifconfig lo 127.0.0.1
dhcpcd eth0

logger -s -p user.info -t "init[$$]" "Configuring SSH"
mkdir -p /etc/ssh
if [ ! -d /var/lib/rancheros-lite/ssh ]; then
  mv /etc/ssh /var/lib/rancheros-lite/ssh
else
  rm -rf /etc/ssh
fi
ln -s /var/lib/rancheros-lite/ssh /etc/ssh

for i in rsa dsa ecdsa ed25519; do
  output=/etc/ssh/ssh_host_${i}_key
  if [ ! -f $output ]; then
    ssh-keygen -t $i -f $output -N '' > /dev/null
  fi
done

/usr/sbin/sshd

if [ -x /var/lib/rancheros-lite/start.sh ]; then
  logger -s -p user.info -t "init[$$]" "Executing custom script"
  /var/lib/rancheros-lite/start.sh || true
fi

sync

logger -s -p user.info -t "init[$$]" "Starting console"
respawn /sbin/getty 115200 tty0 &
respawn /sbin/getty 115200 tty1 &
respawn /sbin/getty 115200 ttyS0 &
chvt 2

if [ -f /var/lib/rancheros-lite/profile ]; then
  logger -s -p user.info -t "init[$$]" "Reloading /var/lib/rancheros-lite/profile"
  source /var/lib/rancheros-lite/profile
fi

if [ -z "$DOCKER_STORAGE" ]; then
  DOCKER_STORAGE="overlay"
fi
if [ -z "$DOCKER_DIR" ]; then
  DOCKER_DIR="/var/lib/docker"
fi
if [ -z "$DOCKER_HOST" ]; then
  DOCKER_HOST="-H unix://"
fi

if ! lsmod | grep -q br_netfilter; then
  modprobe br_netfilter 2>/dev/null || true
fi

# Top secret option...
export DOCKER_RAMDISK=true

logger -s -p user.info -t "init[$$]" "Starting Docker -d -D -s $DOCKER_STORAGE -g \"$DOCKER_DIR\" $DOCKER_HOST $DOCKER_EXTRA_ARGS"
exec docker -d -D -s $DOCKER_STORAGE -g "$DOCKER_DIR" $DOCKER_HOST $DOCKER_EXTRA_ARGS
